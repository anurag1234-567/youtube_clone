{"version":3,"file":"static/js/191.86037879.chunk.js","mappings":"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","sources":["components/videoPlayer.jsx","components/recommended.jsx","components/ReadMore.jsx","components/comments.jsx","pages/watch.jsx","utilis/utilis.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport { formatCount } from '../utilis/utilis';\r\nimport axios from \"axios\";\r\n\r\nfunction VideoPlayer(){\r\n    const { id } = useParams();\r\n    const [channelId, setChannelId] = useState('');\r\n    const [videoData, setVideoData] = useState(null);\r\n    const [channelData, setChannelData] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const fetchVideoData = async()=>{\r\n            try{\r\n                const api_key = process.env.REACT_APP_API_KEY;\r\n                const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${id}&key=${api_key}`;\r\n                \r\n                const res = await axios.get(url);\r\n                setChannelId(res.data.items[0].snippet.channelId);\r\n                setVideoData(res.data.items[0]);\r\n            }catch(err){\r\n                console.log(err);\r\n                alert('error');\r\n            }\r\n        }\r\n        fetchVideoData();\r\n    }, [id])\r\n\r\n    useEffect(()=>{\r\n        const fetchChannelData = async()=>{\r\n            if(!channelId) return;\r\n\r\n            try{\r\n                const api_key = process.env.REACT_APP_API_KEY;\r\n                const url = `https://youtube.googleapis.com/youtube/v3/channels?part=snippet%2CcontentDetails%2Cstatistics&id=${channelId}&key=${api_key}`;\r\n                \r\n                const res = await axios.get(url);\r\n                setChannelData(res.data.items[0]);\r\n                console.log(res.data.items[0]);\r\n            }catch(err){\r\n                console.log(err);\r\n                alert('error');\r\n            }\r\n        }\r\n        fetchChannelData();\r\n    }, [channelId])\r\n\r\n    return(\r\n        <div className='videoPlayer'>\r\n            <iframe className=\"video\" src={`https://www.youtube.com/embed/${id}?autoplay=1`} title=\"title\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\r\n\r\n            {\r\n                videoData && \r\n                (<>\r\n                    <p className='title'>{videoData.snippet.title}</p>\r\n\r\n                    <div className='description'>\r\n                        <div className='left'>\r\n                            <img src={channelData && channelData.snippet.thumbnails.default.url} alt='' />\r\n                            <div>\r\n                                <p>{videoData.snippet.channelTitle}</p>\r\n                                <p>{channelData && formatCount(channelData.statistics.subscriberCount)} subscribers</p>\r\n                            </div>\r\n                            <button>Subscribe</button>\r\n                        </div>\r\n\r\n                        <div className='right'>\r\n                            <div className='btn-wrp'>\r\n                                <div className='like'>\r\n                                    <img src={process.env.PUBLIC_URL + '/images/like.svg'} alt='' /> \r\n                                    <span>{formatCount(videoData?.statistics?.likeCount)}</span>\r\n                                </div>\r\n                                <img src={process.env.PUBLIC_URL + '/images/dislike.svg'} alt='' />\r\n                            </div>\r\n\r\n                            <div className='btn-wrp'>\r\n                                <img src={process.env.PUBLIC_URL + '/images/share.svg'} alt='' /> Share\r\n                            </div>\r\n\r\n                            <div className='btn-wrp'>\r\n                                <img src={process.env.PUBLIC_URL + '/images/download.svg'} alt='' /> Download\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default VideoPlayer;","import { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { formatCount, formatDate, formatDuration } from \"../utilis/utilis\";\r\nimport axios from \"axios\";\r\n \r\nfunction Recommended(){\r\n    const { id } = useParams();\r\n    const [categoryId, setCategoryId] = useState(null);\r\n    const [data, setData] = useState([]);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async()=>{\r\n            try{\r\n                const api_key = process.env.REACT_APP_API_KEY;\r\n                const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${id}&key=${api_key}`;\r\n                \r\n                const res = await axios.get(url);\r\n                setCategoryId(res.data.items[0].snippet.categoryId);\r\n            }catch(err){\r\n                console.log(err);\r\n                alert('error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [id])\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async ()=>{\r\n            try{\r\n                if(!categoryId) return;\r\n\r\n                const api_key = process.env.REACT_APP_API_KEY;\r\n                const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&hl=en-IN&maxResults=50&regionCode=IN&videoCategoryId=${categoryId}&key=${api_key}`;\r\n\r\n                const res = await axios.get(url);\r\n                setData(res.data.items);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [categoryId]);\r\n\r\n    return(\r\n        <div className='recommended-list'>\r\n            {\r\n                data.length > 0 &&\r\n                data.map((video, index)=>{\r\n                    return(\r\n                        <div key={index} className='list-item' onClick={()=>{ navigate(`/watch/v/${video.id}`) }}>\r\n                            <div className='img-wrp'>\r\n                                <img src={video.snippet.thumbnails.medium.url} alt='' />\r\n                                <span>{formatDuration(video.contentDetails.duration)}</span>\r\n                            </div>\r\n\r\n                            <div className='description'>\r\n                                <p className='title'>{video.snippet.title}</p>\r\n                                <p>{video.snippet.channelTitle}</p>\r\n                                <p>{formatCount(video.statistics.viewCount)} views • {formatDate(video.snippet.publishedAt)}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Recommended;","import { useState, useRef, useLayoutEffect } from \"react\";\r\n\r\nconst ReadMore = ({ text }) =>{\r\n  const [showingFullText, setShowingFullText] = useState(false);\r\n  const [showButton, setShowButton] = useState(false);\r\n  const textRef = useRef();\r\n\r\n  const toggle = () => { \r\n    setShowingFullText(showingFullText => !showingFullText);\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const handleResize = ()=>{\r\n      const container = textRef.current;\r\n      if (container.scrollHeight > container.clientHeight) {\r\n        setShowButton(true);\r\n      } else {\r\n        setShowButton(false);\r\n      }\r\n    }\r\n\r\n    handleResize(); \r\n    \r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div ref={textRef} className={showingFullText ? \"text show\" : \"text\"} >\r\n        {text}\r\n      </div>\r\n      {\r\n        showButton && <button className='toggle-btn' onClick={toggle}>{showingFullText ? \"Show less\" : \"Read more\"}</button>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReadMore;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport { formatDate } from \"../utilis/utilis\";\r\nimport ReadMore from './ReadMore';\r\nimport axios from \"axios\";\r\n\r\nfunction Comments(){\r\n    const { id } = useParams();\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async()=>{\r\n            try{\r\n                const api_key = process.env.REACT_APP_API_KEY;\r\n                const url = `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&maxResults=50&videoId=${id}&key=${api_key}`;\r\n                \r\n                const res = await axios.get(url);\r\n                setData(res.data.items);\r\n            }catch(err){\r\n                console.log(err);\r\n                alert('error');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [id])\r\n\r\n    return (\r\n        <div className='comments'>\r\n            <h2>Comments</h2>\r\n\r\n            {\r\n                data.length > 0 &&\r\n                data.map((comment, index)=>{\r\n                    let main = comment.snippet.topLevelComment.snippet;\r\n\r\n                    return (\r\n                        <div key={index} className='comment'>\r\n                            <img src={main.authorProfileImageUrl} alt='' />\r\n                            \r\n                            <div className='data'>\r\n                                <div className='user-data'>\r\n                                    <span>{main.authorDisplayName}</span>\r\n                                    <span>{formatDate(main.updatedAt)}</span>\r\n                                </div>\r\n\r\n                                <ReadMore text={main.textOriginal}/>\r\n                                \r\n                                <div className='btn-wrp'>\r\n                                    <span>\r\n                                        <img src={process.env.PUBLIC_URL+'/images/like.svg'} alt=''  /> \r\n                                        {main.likeCount > 0 ? main.likeCount : \"\"}\r\n                                    </span>\r\n                                    <img src={process.env.PUBLIC_URL + '/images/dislike.svg'}  alt='' />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n            }\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Comments;","import VideoPlayer from \"../components/videoPlayer\";\r\nimport Recommended from \"../components/recommended\";\r\nimport Comments from \"../components/comments\";\r\n\r\nfunction Watch(){\r\n\r\n    return(\r\n        <div className='watch'>\r\n            <div className='left-content'>\r\n                <VideoPlayer />\r\n                <Comments />\r\n            </div>\r\n\r\n            <div className='right-content'>\r\n                <Recommended />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Watch;","import moment from \"moment\";\r\n\r\nexport const formatCount = (views) => {\r\n    if(!views) return \"\";\r\n\r\n    if (views > 1000000) {\r\n        return (views / 1000000).toFixed(1) + \"M\";\r\n    } else if (views > 1000) {\r\n        return (views / 1000).toFixed(1) + \"K\";\r\n    } else if(views === 0){\r\n        return \"\";\r\n    } else{\r\n        return views.toString();\r\n    }\r\n}\r\n\r\nexport const formatDate = (date)=>{\r\n    return moment(date).fromNow();\r\n}\r\n\r\nexport const formatDuration = (durationString) =>{\r\n    const duration = moment.duration(durationString);\r\n\r\n    let formattedDuration;\r\n    if (duration.asHours() >= 1) {\r\n        formattedDuration = moment.utc(duration.asMilliseconds()).format(\"H:mm:ss\");\r\n    } else {\r\n        formattedDuration = moment.utc(duration.asMilliseconds()).format(\"m:ss\");\r\n    }\r\n\r\n    return formattedDuration;\r\n}"],"names":["_videoData$statistics","id","useParams","channelId","setChannelId","useState","videoData","setVideoData","channelData","setChannelData","useEffect","async","api_key","process","url","concat","res","axios","get","data","items","snippet","err","console","log","alert","fetchVideoData","fetchChannelData","_jsxs","className","children","_jsx","src","title","allow","allowFullScreen","_Fragment","thumbnails","default","alt","channelTitle","formatCount","statistics","subscriberCount","likeCount","categoryId","setCategoryId","setData","navigate","useNavigate","fetchData","length","map","video","index","onClick","medium","formatDuration","contentDetails","duration","viewCount","formatDate","publishedAt","_ref","text","showingFullText","setShowingFullText","showButton","setShowButton","textRef","useRef","useLayoutEffect","handleResize","container","current","scrollHeight","clientHeight","window","addEventListener","removeEventListener","ref","toggle","comment","main","topLevelComment","authorProfileImageUrl","authorDisplayName","updatedAt","ReadMore","textOriginal","VideoPlayer","Comments","Recommended","views","toFixed","toString","date","moment","fromNow","durationString","formattedDuration","asHours","asMilliseconds","format"],"sourceRoot":""}